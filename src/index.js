const express = require("express"); // import thÆ° viá»‡n express Ä‘Ã£ cÃ i á»Ÿ trÃªn
const app = express(); // app á»Ÿ Ä‘Ã¢y Ä‘áº¡i diá»‡n cho cÃ¡i dá»± Ã¡n nodejs mÃ  mÃ¬nh sáº½ lÃ m viá»‡c xuyÃªn suá»‘t
const port = 3000; // muá»‘n run app á»Ÿ port 3000

const database = require('./config/database')
database.connect()

const BodyParser = require("body-parser");
app.use(BodyParser.json());
app.use(BodyParser.urlencoded({ extended: true }));

const typeDefs = require("./schema/schema");
const resolvers = require("./resolver/resolver");
const { ApolloServer } = require("apollo-server-express");

async function startApolloServer(typeDefs, resolvers) {
  const server = new ApolloServer({ typeDefs, resolvers });
  await server.start();
  const app = express();

  server.applyMiddleware({
    app,
    path: "/",
  });
  const PORT = process.env.PORT || 7001;
  await new Promise((resolve) => app.listen({ port: PORT }, resolve));
  console.log(`ðŸš€ User service ready at http://localhost:${PORT}${server.graphqlPath}`);
}
startApolloServer(typeDefs, resolvers);


// const PORT = process.env.PORT || 3000;
// app.listen(PORT, () => {
//   // Cho app láº¯ng nghe Ä‘á»‹a chá»‰ localhost (127.0.0.1) trÃªn port 3000
//   console.log(`Example app listening on port ${PORT}`);
// });
